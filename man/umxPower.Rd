% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/umxPower.R
\name{umxPower}
\alias{umxPower}
\title{Test power to detect specified path values in a model.}
\usage{
umxPower(trueModel, update = NULL, n = NULL, power = NULL,
  sig.level = 0.05, value = 0, method = c("ncp", "empirical"),
  explore = FALSE, digits = 3, silent = TRUE)
}
\arguments{
\item{trueModel}{The model with the parameters at values you expect in the population.}

\item{update}{The parameter(s) to drop}

\item{n}{How many subjects? (Default = NULL)}

\item{power}{Default = NULL (conventional level = .8)}

\item{sig.level}{Default = .05}

\item{value}{Value of dropped parameter (default = 0)}

\item{method}{"ncp" (default) or "empirical"}

\item{explore}{Whether to tabulate the range of n or effect size (if n specified). Default = FALSE.}

\item{silent}{Supress model runs printouts to console (TRUE)}
}
\value{
power table
}
\description{
\code{umxPower} takes an input model (the model of the true data), and tests power (or determines n)
to detect dropping (or changing the value) a path in this true model.

A typical target for power is 80\%. Much as the accepted critical p-value is .05, this has emerged as a trade off, in this case
of resources required for more powerful studies against the cost of missing a true effect.  People interested in truth
discourage running studies with low power: A study with 20 percent power will fail to detect real effects 80\% of the time.
But even with zero power, the Type-I error rate remains a nominal 5\% (and with any researcher degrees of freedom, perhaps much more than that).
Low powered research, then, fails to detect true effects, and generates support for random false theories about as often.
This sounds silly, but empirical rates are often as low as 20\% (Button, et al., 2013).

Illustration of  \eqn{\alpha}, \eqn{\beta}, and power (1-\eqn{\beta}):

\if{html}{\figure{power.png}{options: width="50\%" alt="Figure: power.png"}}
\if{latex}{\figure{power.pdf}{options: width=7cm}}
}
\examples{
# ===================================================
# = Power to detect correlation of .3 in 200 people =
# ===================================================

# 1 Make some data
tmp = umx_make_raw_from_cov(qm(1, .3| .3, 1), n=2000, varNames= c("X", "Y"), empirical= TRUE)

# 2. Make model of true XY correlation of .3
m1 = umxRAM("corXY", data = tmp,
   umxPath("X", with = "Y"),
   umxPath(var = c("X", "Y"))
)
# 3. Test power to detect .3 versus 0, with n= 90 subjects
umxPower(m1, "X_with_Y", n= 90)

# ####################
# # Estimating power #
# ####################
# 
#    method = ncp
#         n = 90
#     power = 0.83
# sig.level = 0.05
# statistic = LRT

# =================================================
# = Tabulate Power across a range of values of  n =
# =================================================
umxPower(m1, "X_with_Y", explore = TRUE)

\dontrun{

# =====================================
# = Examples with method = empirical  =
# =====================================

# Power to detect r = .3 given n=90
umxPower(m1, "X_with_Y", n = 90, method = "empirical")
# power is .823
# Test using cor.test doing the same thing.
pwr::pwr.r.test(r = .3, n = 90)
#           n = 90
#           r = 0.3
#   sig.level = 0.05
#       power = 0.827
# alternative = two.sided

# Power search for detectable effect size, given n = 90
umxPower(m1, "X_with_Y", n= 90, method = "empirical", explore = TRUE)

# Search X_with_Y:power relationship for n=90
|    | X_with_Y   | power     | lower     | upper     |
|:---|:-----------|:----------|:----------|:----------|
| 1  | 0.08800859 | 0.2689414 | 0.1596095 | 0.4160855 |
| 2  | 0.10066598 | 0.3236951 | 0.2117817 | 0.4602180 |
| 3  | 0.11332337 | 0.3837446 | 0.2747536 | 0.5058168 |
| 4  | 0.12598077 | 0.4475620 | 0.3469889 | 0.5526166 |
| 5  | 0.13863816 | 0.5131549 | 0.4249318 | 0.6005657 |
| 6  | 0.15129555 | 0.5782978 | 0.5032166 | 0.6499256 |
| 7  | 0.16395294 | 0.6408252 | 0.5758201 | 0.7010404 |
| 8  | 0.17661033 | 0.6989084 | 0.6383710 | 0.7532292 |
| 9  | 0.18926773 | 0.7512450 | 0.6901890 | 0.8036907 |
| 10 | 0.20192512 | 0.7971249 | 0.7332804 | 0.8488375 |
| 11 | 0.21458251 | 0.8363858 | 0.7698677 | 0.8865116 |
| 12 | 0.22723990 | 0.8692947 | 0.8014434 | 0.9163789 |
| 13 | 0.23989729 | 0.8964042 | 0.8289134 | 0.9392231 |
| 14 | 0.25255468 | 0.9184186 | 0.8528663 | 0.9562632 |
| 15 | 0.26521208 | 0.9360885 | 0.8737344 | 0.9687514 |
| 16 | 0.27786947 | 0.9501390 | 0.8918717 | 0.9777896 |
| 17 | 0.29052686 | 0.9612285 | 0.9075880 | 0.9842729 |
| 18 | 0.30318425 | 0.9699297 | 0.9211637 | 0.9888940 |
| 19 | 0.31584164 | 0.9767254 | 0.9328545 | 0.9921728 |
| 20 | 0.32849904 | 0.9820138 | 0.9428939 | 0.9944916 |

}

}
\references{
\itemize{
\item \href{https://tbates.github.io}{tutorials}
}
}
\seealso{
\itemize{
\item \code{\link[=umxRAM]{umxRAM()}}
}

Other Teaching and Testing functions: \code{\link{umxDiagnose}}
}
\concept{Teaching and Testing functions}
