% Generated by roxygen2 (4.0.0): do not edit by hand
\name{umxStart}
\alias{umxStart}
\title{umxStart}
\usage{
umxStart(obj = NA, sd = NA, n = 1, onlyTouchZeros = F)
}
\arguments{
\item{obj}{The RAM or matrix \code{\link{mxModel}}, or \code{\link{mxMatrix}} that you want to set start values for.}

\item{sd}{Optional Standard Deviation for start values}

\item{n}{Optional Mean for start values}

\item{onlyTouchZeros}{Don't start things that appear to have already been started (useful for speeding \code{\link{umxReRun}})}
}
\value{
- \code{\link{mxModel}} with updated start values
}
\description{
umxStart will set start values for the free parameters in RAM and Matrix \code{\link{mxModel}}s, or even mxMatrices.
It will try and be smart in guessing these from the values in your data, and the model type.
If you give it a numeric input, it will use obj as the mean, return a list of length n, with sd = sd
}
\examples{
require(OpenMx)
data(demoOneFactor)
latents  = c("G")
manifests = names(demoOneFactor)
m1 <- mxModel("One Factor", type = "RAM",
	manifestVars = manifests, latentVars = latents,
	mxPath(from = latents, to = manifests),
	mxPath(from = manifests, arrows = 2),
	mxPath(from = latents, arrows = 2, free = F, values = 1.0),
	mxData(cov(demoOneFactor), type = "cov", numObs = 500)
)
mxEval(S, m1) # default variances are 0
m1 = umxStart(m1)
mxEval(S, m1) # plausible variances
umxStart(14, sd = 1, n = 10) # return vector of length 10, with mean 14 and sd 1
# # TODO get this working
# umx_print(mxEval(S,m1), 2, zero.print= ".") # plausible variances
}
\references{
- \url{http://openmx.psyc.virginia.edu}
}
\seealso{
- \code{\link{umxLabel}}, \code{\link{umxRun}}, \code{\link{umxSummary}}

Other umx core functions: \code{\link{umxLabel}}
}

