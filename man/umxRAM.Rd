% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_run_modify.r
\name{umxRAM}
\alias{umxRAM}
\title{Easy-to-use RAM model maker.}
\usage{
umxRAM(model = NA, ..., data = NULL, name = NA, comparison = TRUE,
  setValues = TRUE, suffix = "", independent = NA,
  remove_unused_manifests = TRUE, showEstimates = c("none", "raw", "std",
  "both", "list of column names"), refModels = NULL,
  thresholds = c("deviationBased", "direct", "ignore", "left_censored"),
  autoRun = getOption("umx_auto_run"))
}
\arguments{
\item{model}{A model to update (or set to string to use as name for new model)}

\item{...}{mx or umxPaths, mxThreshold objects, etc.}

\item{data}{data for the model. Can be an \code{\link{mxData}} or a data.frame}

\item{name}{A friendly name for the model}

\item{comparison}{Compare the new model to the old (if updating an existing model: default = TRUE)}

\item{setValues}{Whether to generate likely good start values (Defaults to TRUE)}

\item{suffix}{String to append to each label (useful if model will be used in a multi-group model)}

\item{independent}{Whether the model is independent (default = NA)}

\item{remove_unused_manifests}{Whether to remove variables in the data to which no path makes reference (defaults to TRUE)}

\item{showEstimates}{Whether to show estimates. Defaults to no (alternatives = "raw", "std", etc.)}

\item{refModels}{pass in reference models if available. Use FALSE to supress computing these if not provided.}

\item{thresholds}{Whether to use deviation-based threshold modeling for ordinal data (if any is detected), direct, or do nothing.}

\item{autoRun}{Whether to mxRun the model (default TRUE: the estimated model will be returned)}
}
\value{
- \code{\link{mxModel}}
}
\description{
umxRAM expedites creation of RAM models, still without doing invisible things to the model.
}
\examples{

# ===========================
# = Here's a simple example =
# ===========================
m1 = umxRAM("tim", data = mtcars,
	umxPath(c("wt", "disp"), to = "mpg"),
	umxPath("wt", with = "disp"),
	umxPath(v.m. = c("wt", "disp", "mpg"))
)

# ====================================
# = A cov model, with steps laid out =
# ====================================

# 1. For convenience, list up the manifests you will be using
selVars = c("mpg", "wt", "disp")

# 2. Create an mxData object
myCov = mxData(cov(mtcars[,selVars]), type = "cov", numObs = nrow(mtcars) )

# 3. Create the model (see ?umxPath for more nifty options)
m1 = umxRAM("tim", data = myCov,
	umxPath(c("wt", "disp"), to = "mpg"),
	umxPath("wt", with = "disp"),
	umxPath(var = selVars)
)

# 4. Use umxSummary to get standardized parameters, CIs etc.
umxSummary(m1, show = "std")

# 5. Display path diagram
plot(m1)
plot(m1, resid = "line")

# ===================================================================================
# = For playing around, umxRAM supports a vector of manifest names in place of data =
# ===================================================================================

m1 = umxRAM("play", data = paste0("x", 1:4),
	umxPath("g", to = paste0("x", 1:4)),
	umxPath(var = paste0("x", 1:4)),
	umxPath(v1m0 = "g")
)

# =================================================
# = This is an example of using your own labels:  =
#   umxRAM will not over-ride them                =
# =================================================
m1 = umxRAM("tim", data = myCov,
	umxPath(c("wt", "disp"), to = "mpg"),
	umxPath(cov = c("wt", "disp"), labels = "b1"),
	umxPath(var = c("wt", "disp", "mpg"))
)
omxCheckEquals(m1$S$labels["disp", "wt"], "b1") # label preserved
m1$S$labels
#      mpg             wt            disp
# mpg  "mpg_with_mpg"  "mpg_with_wt" "disp_with_mpg"
# wt   "mpg_with_wt"   "wt_with_wt"  "b1"
# disp "disp_with_mpg" "b1"          "disp_with_disp"
}
\references{
- \url{http://tbates.github.io}, \url{https://github.com/tbates/umx}
}
\seealso{
\code{\link{umxPath}}, \code{\link{umxSummary}}, \code{\link{plot}}

Other Core Modelling Functions: \code{\link{plot.MxModel}},
  \code{\link{umxDiagnose}}, \code{\link{umxLatent}},
  \code{\link{umxMatrix}}, \code{\link{umxPath}},
  \code{\link{umxReduce}}, \code{\link{umxRun}},
  \code{\link{umx}}
}
