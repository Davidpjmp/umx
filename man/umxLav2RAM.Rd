% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lavanify 2 ram.R
\name{umxLav2RAM}
\alias{umxLav2RAM}
\title{Convert a lavaan syntax string to a umxRAM model}
\usage{
umxLav2RAM(lav, data = "auto", lavaanMode = "sem", printTab = TRUE,
  group = NULL)
}
\arguments{
\item{lav}{a lavaan syntax string, e.g. "A~~B"}

\item{data}{data to add to model (defaults to auto, which is just sketch mode)}

\item{printTab}{= TRUE (more for debugging)}

\item{lavaan}{Defaults for automagical paths with lavaan syntax input (default = "sem")}
}
\value{
\itemize{
\item list of \code{\link{umxPath}}s
}
}
\description{
Use lavaan syntax to create umxRAM models. If data are provided, a \code{umxRAM} model is returned.
If more than one group is found, a superModel is returned.

This function is at the alpha quality stage, and \strong{should be expected to have bugs}.
Several features are not yet supported. Let me know if you'd like them.
}
\details{
Uses the defaults of \code{lavaan::sem}
\itemize{
\item int.ov.free     = TRUE
\item int.lv.free     = FALSE
\item auto.fix.first  = TRUE (unless std.lv = TRUE)
\item auto.fix.single = TRUE
\item auto.var        = TRUE
\item auto.cov.lv.x   = TRUE
\item auto.th         = TRUE
\item auto.delta      = TRUE
\item auto.cov.y      = TRUE
\item fixed.x         = FALSE (not standard in lavaan::sem, but needed for RAM)
}
}
\examples{

# auto-data, print table, return umxRAM model
m1 = umxLav2RAM("y ~ x")

lav = "y ~ x1 + 2.4*x2 + x3"
tmp = umxLav2RAM(lav, data = "auto", printTab= FALSE)

# TODO: lav = "x1 ~ x3.loading*x3"

lav = "x1 ~ x3_loading*x3"
tmp = umxLav2RAM(lav)
tmp = umxLav2RAM("y ~ x1 + 2.4*x2; s =~ 0*y11 + 1*y12 + 2*y13 + 3*y14")

m1 = umxRAM(HS.model, data =HolzingerSwineford1939)

tmp = umxLav2RAM("L =~ X1 + X2; L ~ Y")

m1 = umxRAM("tim", tmp, data = c("X1", "X2", "Y"))

# more complex:

tab = lavaanify("
	L =~ X1 + X2
	L ~ Y")

lav = " # Model 14 PROCESS Hayes - moderated mediation
gnt ~ a*cb
INT ~ b1*gnt + b2*cn + b3*cngn + c*cb

indirect := a*b1
direct := c

ab3 := a * b3
loCN := a * b1 + ab3 * -0.5
hiCN := a * b1 + ab3 * 0.5
"
tmp = umxLav2RAM(lav)


m1 = sem("x1~b1*x2; B1_sq := b1^2", data = demoOneFactor); summary(m1)
m1 = umxRAM2("x1~b1*x2; B1_sq := b1^2")

lav = ' # model with labeled parameters
y ~ b1*x1 + b2*x2 + b3*x3
# constraints
b1 == (b2 + b3)^2
b1 > exp(b2 + b3)'
tmp = umxLav2RAM(lav)

}
\seealso{
\itemize{
\item \code{\link{umxRAM}}
}

Other Super-easy helpers: \code{\link{umxEFA}},
  \code{\link{umxTwoStage}}, \code{\link{umx}}
}
\concept{Super-easy helpers}
